<!DOCTYPE html>
<html lang="en" ng-app="myApp">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title><%= title%></title>
	<%- include('../partials/css_includes') %>

	<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body>
	<div class="wrapper" ng-controller="myController"> 
		<div class="header">
			<div class="container-fluid row">
				<%- include('../partials/header.ejs') %> 
			</div>
		</div>
		<div class="container-fluid clearfix">
			<div class="navigation">
				<%- include('../partials/navigation.ejs') %>
			</div>
			<div class="row margin" ng-if="peer_review">
				<%- include('../components/acceptpeer_review.ejs') %>
			</div>
			<div class="row margin" ng-if="new_project">
				<%- include('../components/new_project.ejs') %>
			</div>
			
			<div class="row full-row">
				<div class="col-md-4 no-padding">
					<%- include('../components/todo.ejs') %>
				</div>
				<div class="col-md-8 no-padding">
					<%- include('../components/projects.ejs') %>
				</div>
		    </div>
		    <div class="row full-row">
				<div class="col-md-8 no-padding">
					<%- include('../components/skill_set.ejs') %>
				</div>
				<div class="col-md-4 no-padding">
					<%- include('../components/strength_weekness.ejs') %>
				</div>
		    </div>
		</div>
		<%- include('../components/mentor_review_popup.ejs') %>
	</div>
	<div class="full-row">
		<%- include('../components/footer.ejs') %>
	</div>
	<%- include('../partials/js_includes') %>

<script>

	$('.strengths-tooltip').hide();

	
	myApp.controller('myController', ['$scope', 'myProfile', function($scope, myProfile){
		$scope.user_id = "<%= user._id %>";
		$scope.mentee_passive_notification = [];
		/* myProfile is a service defined in ng-controller.js for get Profile data. */
		myProfile.getProfile("<%= user._id %>", function(data) {
			$scope.$apply(function () {
				$scope.profile = data;
			})
		});

		$scope.todolist = {
		    "name": "To Do List",
		    "date": "18th Feb",
		    "list": [
		        {
		            "do": "PAN Card Wireframes submission",
		            "time": "12:00 PM",
		            "status": "checked"
		        },
		        {
		            "do": "Meeting with Pradeep",
		            "time": "2:00 PM",
		            "status": "ongoing"
		        },
		        {
		            "do": "PAN Card Lo-Fi Wireframes",
		            "time": "3:00 PM",
		            "status": "ongoing"
		        },
		        {
		            "do": "PAN Card peer review with Bala Narasimha",
		            "time": "4:00 PM",
		            "status": "ongoing"
		        },
		        {
		            "do": "PAN Card changes",
		            "time": "5:00 PM",
		            "status": "ongoing"
		        },
		        {
		            "do": "Review Wireframes of Ravindra Kastala",
		            "time": "6:00 PM",
		            "status": "ongoing"
		        }
		    ]
		};		


		$scope.strength_weakness= "strength";

		//This data will come from api
		$scope.skillset = {
			categories: ["Week 1", "Week 2", "Week 3", "Week 4", "Week 5", "Week 6", "Week 7", "Week 8"],
			series: [{
				name: "Technical Skills",
				data: [1,2,3,4,5,6,7,3],
				color: '#97ab56'
			}, {
				name: "Soft Skills",
				data: [4,5,6,7,3,1,2,3],
				color: '#2995c5'
			}]
		};
		
		$scope.mentor_id = '<%= user.mentor_id %>';
		$scope.skillSetMap = function () {
			if($scope.skillset)
				skillMap($scope.skillset);			
		}
		
		$scope.check = function (event,index) {
			$(event.target).parent().parent().removeClass('ongoing');
			$(event.target).parent().parent().addClass('checked');	
			$scope.todolist.list[index].status = 'checked';	
		}
		$scope.uncheck = function (event,index) {
			$(event.target).parent().parent().removeClass('checked');
			$(event.target).parent().parent().addClass('ongoing');	
			$scope.todolist.list[index].status = 'ongoing';
		}
		$scope.showTooltip = function (event,value) {
			$(event.target).find('.strengths-tooltip').show();
			var left = $(event.target).find('.strengths-perc-div').width();
			$(event.target).find('.strengths-tooltip').css('left',left-10);
			//console.log(left);
			
		}
		$scope.hideTooltip = function (event) {
			$(event.target).find('.strengths-tooltip').hide();
		}
		$scope.notReview = function (notification_id, project_id, artifact_name, owner_name, mentee_id) {
			canclePeerreview(project_id,artifact_name);
			deleteNotification(notification_id);
			$('.peer-review-request').hide();
			$scope.global_message = {
				"project_name": "You",
				"message": "have Ignored the review request",
				"to": ""
			}
			$('.global-notifications').show();
			$('.global-notifications').delay( 2000 ).fadeOut( 400 );
			getMentorIdByMenteeId(mentee_id,function(result){
				$scope.mentor_id = result;
					var notificationData = {
					"name": '<%= user.name %>',
					"image": "/css/images/vaibhav.png",
					"mentee_id":mentee_id,
					"mentor_id": $scope.mentor_id,
					"message": " did not accepted the " + owner_name + "'s Peer Review request of " + artifact_name ,
					"mentee_message": " did not accepted your Peer Review request for" +  artifact_name,
					"time": getDate(new Date()),
					"to": "instructor",
					"toMentor":"yes",
					"toMentee":"yes"
				};
				createProjectPassiveNotification(notificationData);
			});
		}

		$scope.getTaskById = function(task_id) {
			getTaskById(task_id,function(result){
				$scope.$apply(function () {
					$scope.new_project = {
						"mentor": $scope.mentor_name,
						"mentor_img": "/css/images/ramu.png",
						"mentor_qualification": "UXD",
						"Task_name" : result.task_name,
						"description":htmlDecode(result.task_details)
					};
		        });
			});	
		}

		$scope.sendNotificationid = function(notification_id){
			$scope.notification_id = notification_id;
		}

		$scope.createProject = function() {
			var notification_id = $scope.notification_id;
			var data = {
				"notification":notification_id,
			}
			window.location.href = 'timelines/' + $scope.notification_id ;
			
		};

		$scope.getTaskName = function(task_id) {
			getTaskName(task_id,function(result){
				return result;
			});	
		}
		$scope.click = 'go';
		$scope.redirect = function(path) {
			if ($scope.click == 'go') {
				window.location.href = '/project_artifacts/' + path ;
			};
		}

		$scope.getAllMentees = function  (project_id, name) {
			$scope.click = 'go_on';
			$scope.project_id = project_id;
			$scope.project_name = name;
			var user_type = 'mentor';
			getMentors(user_type, function(result){
				console.log(result);
				$scope.$apply(function () {
					$scope.all_mentors = result;
		        });
			});
		}

		$scope.autofill_mentee_username = function($event, mentee_id, mentee_mail) {
			$scope.mentor_id = mentee_id;
			console.log($scope.mentor_id);
			var mentee_mail = mentee_mail;
			$('.field-length').val(mentee_mail);
			$(event.target).hide();
			$('.auto-fill').hide();
		}

		$scope.getMyProjects = function() {
			var id = '<%=user._id%>';
			getMyProjects(id,function(result){
				console.log(result);
				
				$scope.$apply(function(){
					$scope.projects = result;
					for (var i = 0; i < $scope.projects.length; i++) {
						if ($scope.projects[i].status == 'ongoing') {
							if ($scope.projects[i].doneartifacts == $scope.projects[i].artifacts.length) {
								$scope.projects[i].review_status = true;
							}
						};
						
					}					
				})
			});	
		}

		$scope.requestMentorReview = function () {
			$scope.project_status = false;
			var request = {
				"owner_id" : '<%= user._id %>',
				"owner_name" : '<%= user.name %>',
				"mentor_id" : $scope.mentor_id,
				"task" : $scope.project_name,
				"project_id" : $scope.project_id,
				"description" : $scope.tinymceModel,
				"start_date" : $scope.start_date,
				"start_time" : $scope.start_time,
				"to" : "instructor",
				"type" : "mentor review"
			};
			requestPeerReview(request,function(result){
			});
			getUserName($scope.mentor_id,function(result){
				$scope.mentor_name = result;
				var notificationData = {
					"name": '<%= user.name %>',
					"image": "/css/images/vaibhav.png",
					"message": "Completed the " + $scope.project_name +" project and sent to "+ $scope.mentor_name + " for mentor review" ,
					"time": getDate(new Date()),
					"to": "instructor",
				};
				createProjectPassiveNotification(notificationData);
				
			});
			
		}

		$scope.getMenteeNotifications = function() {
			var id = '<%=user._id%>';
			getMenteeNotifications(id,function(result){
				for (var i = 0; i < result.length; i++) {
					if (result[i].type == "new project") {
						$scope.$apply(function () {
							$scope.notification = result[i]._id;
							$scope.mentor_id = result[i].mentor_id;
							$scope.task_id = result[i].task_id;
							$scope.mentor_name = result[i].mentor_name;
							$scope.sendNotificationid($scope.notification);
							$scope.getTaskById($scope.task_id);
						});
					} else if(result[i].toMentee == "yes"){
						$scope.$apply(function () {
							$scope.mentee_passive_notification.splice(0, 0, result[i]);
					    });
					} else {
						$scope.$apply(function () {
							$scope.peer_review = {
								"notification_id":result[i]._id,
								"owner_id":result[i].owner_id,
								"owner_name": result[i].owner_name,
								"artifact_name": result[i].artifact_name,
								"task": result[i].task,
								"project_id": result[i].project_id,
								"link": 'negative_marking/' + result[i].artifact_name + '/' + result[i].project_id
							};
							$scope.notification_id = result[i]._id;
				        });
					}
				}
				
			});
		}

		getUserName($scope.mentor_id,function(result){
			$scope.mentor_mail = result;
		})

		$scope.bool = false;
		$scope.flag = function () {
			$scope.bool = true;
		}

		
		//Temporary section START
		/*$scope.new_user = false; //First time login
		$scope.user_first_assignment = false; //New user with first assigned task
		$scope.user_assignment = false; //Returning user who has already completed one project and get another task
		
		
		//If the user is new, execute the following code 
		if($scope.new_user) {
			delete $scope.new_project;
			delete $scope.peer_review
			delete $scope.projects;
			$scope.todolist.list.splice(2,3);
			delete $scope.strenghts;
			delete $scope.weakness;
			delete $scope.skillset;
			
		}

		//If the user is new and gets the first task assignment, execute the following code 
		if($scope.user_first_assignment) {
			$scope.peer_review
			delete $scope.projects;
			$scope.todolist.list.splice(2,3);
			delete $scope.strenghts;
			delete $scope.weakness;
			delete $scope.skillset;
			
		}

		//If the user has completed one project and gets another task assignment, execute the following code 
		if($scope.user_assignment) {
			delete $scope.peer_review
			$scope.todolist.list.splice(2,3);
		}*/


		//END
		
		$scope.skillSetMap();
		$scope.getMenteeNotifications();
		$scope.getMyProjects();
		
	}]);

	myApp.filter('mentor_grading', function() {
	    return function(input, uppercase) {
	        var out = [];
	        for (var i = 0; i < input.length; i++) {
	            if(input[i].mentor_grade){
	                out.push(input[i]);
	            }
	        }
	        return out;
	    }
	});
</script>
</body>

</html>