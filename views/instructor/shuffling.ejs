<!DOCTYPE html>
<html lang="en" ng-app="myApp">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Mentorship</title>
	<%- include('../partials/css_includes') %>

	<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body>
	<div class="wrapper" ng-controller="myController">
		<div class="header">
			<div class="container-fluid">
				<div class="row"><%- include('../partials/header.ejs') %> </div>
			</div>
		</div>
		<div class="container-fluid">
			<div class="row page-body">
				<div class="body-sections">
					<div class="navigation">
						<%- include('../partials/navigation.ejs') %>
					</div>
					
					<div class="clearfix"></div>
					<div class="body-section-layout row">
						<div class="no-padding mentor-shuffle col-md-8">
							<div class="modal-header">
								<span>
									<img src="/css/images/profile-mentor.png">
									<span class="modal-title-font"> <strong> Mentors</strong></span>
								</span>	
							</div>
							<%- include('../components/mentor_shuffling.ejs') %>
						</div>
						<div class="mentees-list col-md-4">
							<div class="modal-header">
								<span>
									<img src="/css/images/profile.png">
									<span class="modal-title-font"> <strong> Mentees</strong></span>
								</span>	
							</div>
							<div class="mentee-shuffle-list">
								<%- include('../components/mentee_shuffling.ejs') %>
							</div>
							
						</div>					
					</div>
				</div>
			</div>
		</div>
		<%- include('../components/add_batch.ejs') %>
	</div>
<%- include('../components/footer.ejs') %>
<%- include('../partials/js_includes') %>
<script>
	myApp.controller('myController', ['$scope', 'myProfile', function($scope, myProfile){

		/* myProfile is a service defined in ng-controller.js for get Profile data. */
		myProfile.getProfile("<%= user._id %>", function(data) {
			$scope.$apply(function () {
				$scope.profile = data;
			})
		});
			
		$scope.notificationlist = {
			"list": [{
					  "image": "/css/images/user_male_circle.png",
					  "lastmessage": "Hi can you come online",
					  "time": "3 hrs ago"
					},{
					  "image": "/css/images/user_male_circle.png",
					  "lastmessage": "Will you review my flowcharts",
					  "time": "3 hrs ago"
					},{
					  "image": "/css/images/user_male_circle.png",
					  "lastmessage": "Hey lets meet in conference",
					  "time": "10 hrs ago"
					},{
					  "image": "/css/images/user_male_circle.png",
					  "lastmessage": "Your goal for the page is something not matched with the outcome",
					  "time": "2 minutes ago"
					},{
					  "image": "/css/images/user_male_circle.png",
					  "lastmessage": "Hi can you come online",
					  "time": "2 minutes ago"
					},{
					  "image": "/css/images/user_male_circle.png",
					  "lastmessage": "Hi can you come online",
					  "time": "2 minutes ago"
					}]
		}

		var dragged;


		function dragFunction() {
			$( ".draggable" ).draggable({ 
				cursor: "move", 
				revert: 'invalid',
			});
			var draggable_mentee = $( ".draggable-mentee" );
			var draggable = $(".mentee-list");

			draggable.draggable({
				cursor: "move", 
				containment: $('.timelines-body'),
				revert: 'invalid',
				start : function() {
					dragged = 1;
					//$(".mentee-shuffle-list").droppable("disable");
					$scope.mentee_id = $(this).find('.mentee_id_no_mentor').val();
					$scope.mentee_name = $(this).find('.mentee-name').text();
					$scope.mentee_image = $(this).find('.mentee-shuffling-img img').attr('src');
				}
			});
			draggable_mentee.draggable({ 
				cursor: "move", 
				revert: 'invalid',
				containment: $('.timelines-body'), 
				start : function() {
					//$(".mentee-shuffle-list").droppable("enable");
					$scope.mentee_name = $(this).find('.mentee-shuffle-name').text();
					$scope.mentee_image = $(this).find('.mentees-images img').attr('src');
					$scope.mentee_id = $(this).find('.mentee-id').val();
					$scope.mentor_id = $(this).find('.mentor-id').val();
					
					$.each($scope.mentors, function(i,e) {
						if(e.id == $scope.mentor_id) {
							$scope.source_mentor_idx = i;							
						}
					});

					$.each($scope.mentors[$scope.source_mentor_idx].mentees, function(i,e) {
						
						if(e.id == $scope.mentee_id) {
							$scope.source_mentee_idx = i;							
						}
					});
				}
			});
			var mentees_list = $( ".mentee-shuffle-list" );
			var mentee_shuffle = $( ".mentee-shuffle" );
			
			mentees_list.droppable({
				drop: function(event, ui){
					if (dragged != 1){
						$scope.mentor_id = "";

						var mentee = {
							"id": $scope.mentee_id,
						 	"name": $scope.mentee_name,
						 	"image": $scope.mentee_image
						};

						var empty_mentee = {
							"id": "",
						 	"name": "",
						 	"image": ""
						};
						
						$scope.$apply(function(){
							$scope.mentees.push(mentee);
							$scope.mentors[$scope.source_mentor_idx].mentees.splice($scope.source_mentee_idx,1);
							$scope.mentors[$scope.source_mentor_idx].mentees.push(empty_mentee);
						});

						//Make a update in the database
						$scope.setMentorId();
						
						dragFunction();
					}
					
	   			}
			});
			
			mentee_shuffle.droppable({
				drop: function(event, ui){
					$scope.mentor_id = $(this).find('.mentor-id').val();
					
					

					if(dragged == 1 ){ //Dragging from the right Unassigned Mentee list 
						/* get mentee and mentor index */
						$.each($scope.mentees, function(i,e) {
							if(e.id == $scope.mentee_id) {
								$scope.mentee_idx = i;
							}
						});
						$.each($scope.mentors, function(i,e) {
							if(e.id == $scope.mentor_id) {
								$scope.mentor_idx = i;							
							}
						});


						$(this).children('div').each(function(idx, ele) {
							if($(ele).find('.mentee-id').val() == "") {

								var mentee = {
									"id":$scope.mentee_id,
								 	"name":$scope.mentee_name,
								 	"image":$scope.mentee_image
								}
								
								$scope.$apply(function(){
									$scope.mentors[$scope.mentor_idx].mentees.splice(idx,1,mentee);
									$scope.mentees.splice($scope.mentee_idx,1);
								});

								//Make a update in the database
								$scope.setMentorId();

								dragFunction();
								return false;
							}
						});
					}else { //Dragging from other mentors' mentees
						
						$.each($scope.mentors, function(i,e) {
							if(e.id == $scope.mentor_id) {
								$scope.destination_mentor_idx = i;							
							}
						});

						$.each($scope.mentors[$scope.destination_mentor_idx].mentees, function(i,e) {
							
							if(e.id == $scope.mentee_id) {
								$scope.destination_mentee_idx = i;							
							}
						});

						$(this).children('div').each(function(idx, ele) {
							if($(ele).find('.mentee-id').val() == "") {

								var mentee = {
									"id":$scope.mentee_id,
								 	"name":$scope.mentee_name,
								 	"image":$scope.mentee_image
								};

								var empty_mentee = {
									"id": "",
								 	"name": "",
								 	"image": ""
								};
								
								$scope.$apply(function(){
									$scope.mentors[$scope.destination_mentor_idx].mentees.splice(idx,1,mentee);
									$scope.mentors[$scope.source_mentor_idx].mentees.splice($scope.source_mentee_idx,1);
									$scope.mentors[$scope.source_mentor_idx].mentees.push(empty_mentee);
								});

								//Make a update in the database
								$scope.setMentorId();

								dragFunction();
								return false;
							}
						});
					}
				}
			});
			mentee_shuffle.droppable({
				over: function(event, ui){
					if ($(this).children('div:last').find('.mentee-id').val() != "") {
						$(this).droppable( "disable" );
					}
				}
			});
			mentee_shuffle.droppable( "enable" );
		}

		$scope.startShuffle = function() {
			dragFunction();
		}

		$scope.fields = [{
		    email: ""
		}, {
		    email: ""
		}, {
		    email: ""
		}];
		$scope.add = function() {
			$scope.fields.push({
		        email: ""
		    });
		};
		$scope.remove = function(index) {
			if($scope.fields.length >3) {
				$scope.fields.splice(index, 1)
			}
		};

		//New code for shuffling page

		$scope.getAllUnassignedMentees = function() {//List all the mentees who do not have mentor_id
            getAllUnassignedMentees(function (result) {
                console.log(result); 
                $scope.$apply(function() {
                	$scope.mentees = result;
                });

                //Load all the mentors
                $scope.getAllMentors();
            })
        }

        $scope.getAllMentors = function() {//List all the mentees who do not have mentor_id
            getAllMentors(function (result) {
                console.log(result); 
                $scope.$apply(function() {
                	$scope.mentors = result;
                });

                $scope.startShuffle();
            })
        }

        $scope.setMentorId = function() {//List all the mentees who do not have mentor_id
            var obj = {
            	"mentee_id": $scope.mentee_id, 
            	"mentor_id": $scope.mentor_id
            }
            setMentorId( angular.toJson(obj) );
        }

		$scope.getAllUnassignedMentees();
	}]);

</script>
</body>

</html>